2024-03-31 13:47:16 [main] INFO  : Starting MovieControllerTest using Java 21.0.2 with PID 41088 (started by sanek in C:\projects\movie-land)
2024-03-31 13:47:16 [main] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-03-31 13:47:18 [main] INFO  : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-03-31 13:47:18 [main] INFO  : Finished Spring Data repository scanning in 84 ms. Found 2 JPA repository interfaces.
2024-03-31 13:47:19 [main] INFO  : Flyway Community Edition 9.22.3 by Redgate
2024-03-31 13:47:19 [main] INFO  : See release notes here: https://rd.gt/416ObMi
2024-03-31 13:47:19 [main] INFO  : 
2024-03-31 13:47:19 [main] INFO  : Database: jdbc:postgresql://localhost:53536/test (PostgreSQL 16.2)
2024-03-31 13:47:19 [main] WARN  : Flyway upgrade recommended: PostgreSQL 16.2 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2024-03-31 13:47:19 [main] INFO  : Schema history table "public"."flyway_schema_history" does not exist yet
2024-03-31 13:47:19 [main] INFO  : Successfully validated 4 migrations (execution time 00:00.042s)
2024-03-31 13:47:19 [main] INFO  : Creating Schema History table "public"."flyway_schema_history" ...
2024-03-31 13:47:19 [main] INFO  : Current version of schema "public": << Empty Schema >>
2024-03-31 13:47:19 [main] INFO  : Migrating schema "public" to version "1.0 - initial schema"
2024-03-31 13:47:20 [main] INFO  : Migrating schema "public" to version "1.1 - add genre movie mutual table"
2024-03-31 13:47:20 [main] INFO  : Migrating schema "public" to version "1.2 - drop sequences dop genre column"
2024-03-31 13:47:20 [main] INFO  : DB: drop cascades to default value for column id of table genres
2024-03-31 13:47:20 [main] INFO  : DB: drop cascades to default value for column id of table movies
2024-03-31 13:47:20 [main] INFO  : DB: drop cascades to default value for column id of table posters
2024-03-31 13:47:20 [main] INFO  : Migrating schema "public" to version "1.3 - drop posters table add picture path into movies"
2024-03-31 13:47:20 [main] INFO  : Successfully applied 4 migrations to schema "public", now at version v1.3 (execution time 00:00.137s)
2024-03-31 13:47:20 [main] INFO  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-03-31 13:47:20 [main] INFO  : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-03-31 13:47:20 [main] INFO  : HHH000026: Second-level cache disabled
2024-03-31 13:47:21 [main] INFO  : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-03-31 13:47:21 [main] INFO  : HikariPool-1 - Starting...
2024-03-31 13:47:21 [main] INFO  : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7135e8cd
2024-03-31 13:47:21 [main] INFO  : HikariPool-1 - Start completed.
2024-03-31 13:47:21 [main] WARN  : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-03-31 13:47:23 [main] INFO  : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-03-31 13:47:23 [main] INFO  : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-03-31 13:47:24 [main] INFO  : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-03-31 13:47:24 [main] WARN  : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-03-31 13:47:25 [main] INFO  : Initializing Spring TestDispatcherServlet ''
2024-03-31 13:47:25 [main] INFO  : Initializing Servlet ''
2024-03-31 13:47:25 [main] INFO  : Completed initialization in 3 ms
2024-03-31 13:47:25 [main] INFO  : Started MovieControllerTest in 9.489 seconds (process running for 16.985)
2024-03-31 13:47:25 [scheduling-1] INFO  : Cache has been updated at 2024-03-31T13:47:25.923628900
2024-03-31 13:47:26 [main] INFO  : The property ending with 'schema' was not found. Please notify a dbunit developer to add the property to the class org.dbunit.database.DatabaseConfig
2024-03-31 13:47:26 [main] INFO  : The property ending with 'prologTimeout' was not found. Please notify a dbunit developer to add the property to the class org.dbunit.database.DatabaseConfig
2024-03-31 13:47:26 [main] INFO  : The property ending with 'replacers' was not found. Please notify a dbunit developer to add the property to the class org.dbunit.database.DatabaseConfig
2024-03-31 13:47:26 [main] INFO  : DBUnit configuration for dataset executor 'default':cacheConnection: false
cacheTableNames: true
caseInsensitiveStrategy: LOWERCASE
columnSensing: false
leakHunter: false
mergeDataSets: false
mergingStrategy: METHOD
disableSequenceFiltering: false
alwaysCleanBefore: false
alwaysCleanAfter: false
raiseExceptionOnCleanUp: false
disablePKCheckFor: com.github.database.rider.core.configuration.DBUnitConfig@3219f34e
schema: 
tableType: [TABLE]
allowEmptyFields: false
fetchSize: 100
qualifiedTableNames: false
prologTimeout: 1000
batchSize: 100
batchedStatements: false
caseSensitiveTableNames: false
replacers: [com.github.database.rider.core.replacers.DateTimeReplacer@37b17938, com.github.database.rider.core.replacers.UnixTimestampReplacer@54ba7b3f, com.github.database.rider.core.replacers.NullReplacer@3f3b0b19]

2024-03-31 13:47:45 [main] INFO  : The property ending with 'schema' was not found. Please notify a dbunit developer to add the property to the class org.dbunit.database.DatabaseConfig
2024-03-31 13:47:45 [main] INFO  : The property ending with 'prologTimeout' was not found. Please notify a dbunit developer to add the property to the class org.dbunit.database.DatabaseConfig
2024-03-31 13:47:45 [main] INFO  : The property ending with 'replacers' was not found. Please notify a dbunit developer to add the property to the class org.dbunit.database.DatabaseConfig
2024-03-31 13:47:49 [SpringApplicationShutdownHook] INFO  : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-03-31 13:47:49 [SpringApplicationShutdownHook] INFO  : HikariPool-1 - Shutdown initiated...
2024-03-31 13:47:49 [SpringApplicationShutdownHook] INFO  : HikariPool-1 - Shutdown completed.
2024-03-31 13:48:39 [main] INFO  : Starting MovieLandApplication using Java 21.0.2 with PID 35324 (C:\projects\movie-land\target\classes started by sanek in C:\projects\movie-land)
2024-03-31 13:48:39 [main] INFO  : No active profile set, falling back to 1 default profile: "default"
2024-03-31 13:48:40 [main] INFO  : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-03-31 13:48:41 [main] INFO  : Finished Spring Data repository scanning in 85 ms. Found 2 JPA repository interfaces.
2024-03-31 13:48:42 [main] INFO  : Tomcat initialized with port 8080 (http)
2024-03-31 13:48:42 [main] INFO  : Initializing ProtocolHandler ["http-nio-8080"]
2024-03-31 13:48:42 [main] INFO  : Starting service [Tomcat]
2024-03-31 13:48:42 [main] INFO  : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-03-31 13:48:42 [main] INFO  : Initializing Spring embedded WebApplicationContext
2024-03-31 13:48:42 [main] INFO  : Root WebApplicationContext: initialization completed in 2450 ms
2024-03-31 13:48:42 [main] INFO  : HikariPool-1 - Starting...
2024-03-31 13:48:42 [main] INFO  : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@498a612d
2024-03-31 13:48:42 [main] INFO  : HikariPool-1 - Start completed.
2024-03-31 13:48:42 [main] INFO  : Flyway Community Edition 9.22.3 by Redgate
2024-03-31 13:48:42 [main] INFO  : See release notes here: https://rd.gt/416ObMi
2024-03-31 13:48:42 [main] INFO  : 
2024-03-31 13:48:42 [main] INFO  : Database: jdbc:postgresql://localhost:5432/movieland (PostgreSQL 16.1)
2024-03-31 13:48:42 [main] WARN  : Flyway upgrade recommended: PostgreSQL 16.1 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2024-03-31 13:48:43 [main] INFO  : Successfully validated 4 migrations (execution time 00:00.064s)
2024-03-31 13:48:43 [main] INFO  : Current version of schema "public": 1.3
2024-03-31 13:48:43 [main] INFO  : Schema "public" is up to date. No migration necessary.
2024-03-31 13:48:43 [main] INFO  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-03-31 13:48:43 [main] INFO  : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-03-31 13:48:43 [main] INFO  : HHH000026: Second-level cache disabled
2024-03-31 13:48:43 [main] INFO  : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-03-31 13:48:44 [main] WARN  : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-03-31 13:48:45 [main] INFO  : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-03-31 13:48:45 [main] INFO  : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-03-31 13:48:46 [main] INFO  : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-03-31 13:48:46 [main] WARN  : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-03-31 13:48:46 [main] INFO  : Starting ProtocolHandler ["http-nio-8080"]
2024-03-31 13:48:46 [main] INFO  : Tomcat started on port 8080 (http) with context path ''
2024-03-31 13:48:46 [main] INFO  : Started MovieLandApplication in 8.229 seconds (process running for 8.922)
2024-03-31 13:48:47 [scheduling-1] INFO  : Cache has been updated at 2024-03-31T13:48:47.091185100
2024-03-31 13:49:19 [http-nio-8080-exec-1] INFO  : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-31 13:49:19 [http-nio-8080-exec-1] INFO  : Initializing Servlet 'dispatcherServlet'
2024-03-31 13:49:19 [http-nio-8080-exec-1] INFO  : Completed initialization in 1 ms
2024-03-31 13:49:19 [http-nio-8080-exec-1] WARN  : SQL Error: 0, SQLState: 42703
2024-03-31 13:49:19 [http-nio-8080-exec-1] ERROR : ERROR: column "poster_id" does not exist
  Position: 39
2024-03-31 13:49:19 [http-nio-8080-exec-1] ERROR : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [SELECT id, name_native, name_russian, poster_id, price, rating, 
year_of_release FROM movies ORDER BY random() LIMIT 3] [ERROR: column "poster_id" does not exist
  Position: 39] [n/a]; SQL [n/a]] with root cause
org.postgresql.util.PSQLException: ERROR: column "poster_id" does not exist
  Position: 39
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:325)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:115)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:138)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy126.findThreeRandomMovies(Unknown Source)
	at com.movieland.service.impl.DefaultMovieService.getRandomMovies(DefaultMovieService.java:43)
	at com.movieland.controller.MovieController.getRandomMovies(MovieController.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
