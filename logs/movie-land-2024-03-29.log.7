2024-03-29 13:12:44 [HikariPool-1 housekeeper] DEBUG : HikariPool-1 - Pool stats (total=10, active=1, idle=9, waiting=0)
2024-03-29 13:12:59 [HikariPool-1 housekeeper] DEBUG : HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Initializer list:
	  com.movieland.entity.Genre.movies.{element}.poster -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element}.poster)@1302461675 (ToOneAttributeMapping(NavigableRole[com.movieland.entity.Movie.poster])@1580124114)
	  com.movieland.entity.Genre.movies.{element} -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element})@1531104756 (EntityCollectionPart(com.movieland.entity.Genre.movies#{element})@2109419055)
	  com.movieland.entity.Genre.movies -> BagInitializer(com.movieland.entity.Genre.movies)@1069536215 (PluralAttribute(com.movieland.entity.Genre.movies))
	  com.movieland.entity.Genre.movies.{element}.genres -> DelayedCollectionInitializer(com.movieland.entity.Genre.movies.{element}.genres)@386368421 (PluralAttribute(com.movieland.entity.Movie.genres))

2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.name_native,
        m1_1.name_russian,
        p1_0.id,
        p1_0.movie_name,
        p1_0.picture_path,
        m1_1.price,
        m1_1.rating,
        m1_1.year_of_release 
    from
        movies_genre_map m1_0 
    join
        movies m1_1 
            on m1_1.id=m1_0.movie_id 
    left join
        posters p1_0 
            on p1_0.id=m1_1.poster_id 
    where
        m1_0.genre_id=?
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Collection fully initialized: [com.movieland.entity.Genre.movies#1]
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@29cfd92b, started on Fri Mar 29 13:11:32 EDT 2024
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Initializer list:
	  com.movieland.entity.Genre.movies.{element}.poster -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element}.poster)@1696842749 (ToOneAttributeMapping(NavigableRole[com.movieland.entity.Movie.poster])@1580124114)
	  com.movieland.entity.Genre.movies.{element} -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element})@1512717869 (EntityCollectionPart(com.movieland.entity.Genre.movies#{element})@2109419055)
	  com.movieland.entity.Genre.movies -> BagInitializer(com.movieland.entity.Genre.movies)@1021451755 (PluralAttribute(com.movieland.entity.Genre.movies))
	  com.movieland.entity.Genre.movies.{element}.genres -> DelayedCollectionInitializer(com.movieland.entity.Genre.movies.{element}.genres)@959314032 (PluralAttribute(com.movieland.entity.Movie.genres))

2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.name_native,
        m1_1.name_russian,
        p1_0.id,
        p1_0.movie_name,
        p1_0.picture_path,
        m1_1.price,
        m1_1.rating,
        m1_1.year_of_release 
    from
        movies_genre_map m1_0 
    join
        movies m1_1 
            on m1_1.id=m1_0.movie_id 
    left join
        posters p1_0 
            on p1_0.id=m1_1.poster_id 
    where
        m1_0.genre_id=?
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : Stopping beans in phase 2147483647
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Collection fully initialized: [com.movieland.entity.Genre.movies#2]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : Bean 'applicationTaskExecutor' completed its stop procedure
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : Stopping beans in phase 2147482623
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Initializer list:
	  com.movieland.entity.Genre.movies.{element}.poster -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element}.poster)@1704668220 (ToOneAttributeMapping(NavigableRole[com.movieland.entity.Movie.poster])@1580124114)
	  com.movieland.entity.Genre.movies.{element} -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element})@866363015 (EntityCollectionPart(com.movieland.entity.Genre.movies#{element})@2109419055)
	  com.movieland.entity.Genre.movies -> BagInitializer(com.movieland.entity.Genre.movies)@647523984 (PluralAttribute(com.movieland.entity.Genre.movies))
	  com.movieland.entity.Genre.movies.{element}.genres -> DelayedCollectionInitializer(com.movieland.entity.Genre.movies.{element}.genres)@1020618931 (PluralAttribute(com.movieland.entity.Movie.genres))

2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.name_native,
        m1_1.name_russian,
        p1_0.id,
        p1_0.movie_name,
        p1_0.picture_path,
        m1_1.price,
        m1_1.rating,
        m1_1.year_of_release 
    from
        movies_genre_map m1_0 
    join
        movies m1_1 
            on m1_1.id=m1_0.movie_id 
    left join
        posters p1_0 
            on p1_0.id=m1_1.poster_id 
    where
        m1_0.genre_id=?
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Collection fully initialized: [com.movieland.entity.Genre.movies#3]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Initializer list:
	  com.movieland.entity.Genre.movies.{element}.poster -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element}.poster)@1268995945 (ToOneAttributeMapping(NavigableRole[com.movieland.entity.Movie.poster])@1580124114)
	  com.movieland.entity.Genre.movies.{element} -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element})@1554263646 (EntityCollectionPart(com.movieland.entity.Genre.movies#{element})@2109419055)
	  com.movieland.entity.Genre.movies -> BagInitializer(com.movieland.entity.Genre.movies)@1189308802 (PluralAttribute(com.movieland.entity.Genre.movies))
	  com.movieland.entity.Genre.movies.{element}.genres -> DelayedCollectionInitializer(com.movieland.entity.Genre.movies.{element}.genres)@984817116 (PluralAttribute(com.movieland.entity.Movie.genres))

2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : Bean 'webServerGracefulShutdown' completed its stop procedure
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : Stopping beans in phase 2147481599
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.name_native,
        m1_1.name_russian,
        p1_0.id,
        p1_0.movie_name,
        p1_0.picture_path,
        m1_1.price,
        m1_1.rating,
        m1_1.year_of_release 
    from
        movies_genre_map m1_0 
    join
        movies m1_1 
            on m1_1.id=m1_0.movie_id 
    left join
        posters p1_0 
            on p1_0.id=m1_1.poster_id 
    where
        m1_0.genre_id=?
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Collection fully initialized: [com.movieland.entity.Genre.movies#4]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Initializer list:
	  com.movieland.entity.Genre.movies.{element}.poster -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element}.poster)@1269029938 (ToOneAttributeMapping(NavigableRole[com.movieland.entity.Movie.poster])@1580124114)
	  com.movieland.entity.Genre.movies.{element} -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element})@1776051559 (EntityCollectionPart(com.movieland.entity.Genre.movies#{element})@2109419055)
	  com.movieland.entity.Genre.movies -> BagInitializer(com.movieland.entity.Genre.movies)@1383235661 (PluralAttribute(com.movieland.entity.Genre.movies))
	  com.movieland.entity.Genre.movies.{element}.genres -> DelayedCollectionInitializer(com.movieland.entity.Genre.movies.{element}.genres)@1283296128 (PluralAttribute(com.movieland.entity.Movie.genres))

2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.name_native,
        m1_1.name_russian,
        p1_0.id,
        p1_0.movie_name,
        p1_0.picture_path,
        m1_1.price,
        m1_1.rating,
        m1_1.year_of_release 
    from
        movies_genre_map m1_0 
    join
        movies m1_1 
            on m1_1.id=m1_0.movie_id 
    left join
        posters p1_0 
            on p1_0.id=m1_1.poster_id 
    where
        m1_0.genre_id=?
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Collection fully initialized: [com.movieland.entity.Genre.movies#5]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Initializer list:
	  com.movieland.entity.Genre.movies.{element}.poster -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element}.poster)@1973427982 (ToOneAttributeMapping(NavigableRole[com.movieland.entity.Movie.poster])@1580124114)
	  com.movieland.entity.Genre.movies.{element} -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element})@954473695 (EntityCollectionPart(com.movieland.entity.Genre.movies#{element})@2109419055)
	  com.movieland.entity.Genre.movies -> BagInitializer(com.movieland.entity.Genre.movies)@317862448 (PluralAttribute(com.movieland.entity.Genre.movies))
	  com.movieland.entity.Genre.movies.{element}.genres -> DelayedCollectionInitializer(com.movieland.entity.Genre.movies.{element}.genres)@1257688056 (PluralAttribute(com.movieland.entity.Movie.genres))

2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.name_native,
        m1_1.name_russian,
        p1_0.id,
        p1_0.movie_name,
        p1_0.picture_path,
        m1_1.price,
        m1_1.rating,
        m1_1.year_of_release 
    from
        movies_genre_map m1_0 
    join
        movies m1_1 
            on m1_1.id=m1_0.movie_id 
    left join
        posters p1_0 
            on p1_0.id=m1_1.poster_id 
    where
        m1_0.genre_id=?
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Collection fully initialized: [com.movieland.entity.Genre.movies#6]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Initializer list:
	  com.movieland.entity.Genre.movies.{element}.poster -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element}.poster)@606191981 (ToOneAttributeMapping(NavigableRole[com.movieland.entity.Movie.poster])@1580124114)
	  com.movieland.entity.Genre.movies.{element} -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element})@1492412186 (EntityCollectionPart(com.movieland.entity.Genre.movies#{element})@2109419055)
	  com.movieland.entity.Genre.movies -> BagInitializer(com.movieland.entity.Genre.movies)@945931294 (PluralAttribute(com.movieland.entity.Genre.movies))
	  com.movieland.entity.Genre.movies.{element}.genres -> DelayedCollectionInitializer(com.movieland.entity.Genre.movies.{element}.genres)@388992697 (PluralAttribute(com.movieland.entity.Movie.genres))

2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.name_native,
        m1_1.name_russian,
        p1_0.id,
        p1_0.movie_name,
        p1_0.picture_path,
        m1_1.price,
        m1_1.rating,
        m1_1.year_of_release 
    from
        movies_genre_map m1_0 
    join
        movies m1_1 
            on m1_1.id=m1_0.movie_id 
    left join
        posters p1_0 
            on p1_0.id=m1_1.poster_id 
    where
        m1_0.genre_id=?
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Collection fully initialized: [com.movieland.entity.Genre.movies#7]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Initializer list:
	  com.movieland.entity.Genre.movies.{element}.poster -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element}.poster)@1894719097 (ToOneAttributeMapping(NavigableRole[com.movieland.entity.Movie.poster])@1580124114)
	  com.movieland.entity.Genre.movies.{element} -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element})@467537051 (EntityCollectionPart(com.movieland.entity.Genre.movies#{element})@2109419055)
	  com.movieland.entity.Genre.movies -> BagInitializer(com.movieland.entity.Genre.movies)@1590203319 (PluralAttribute(com.movieland.entity.Genre.movies))
	  com.movieland.entity.Genre.movies.{element}.genres -> DelayedCollectionInitializer(com.movieland.entity.Genre.movies.{element}.genres)@1531571981 (PluralAttribute(com.movieland.entity.Movie.genres))

2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.name_native,
        m1_1.name_russian,
        p1_0.id,
        p1_0.movie_name,
        p1_0.picture_path,
        m1_1.price,
        m1_1.rating,
        m1_1.year_of_release 
    from
        movies_genre_map m1_0 
    join
        movies m1_1 
            on m1_1.id=m1_0.movie_id 
    left join
        posters p1_0 
            on p1_0.id=m1_1.poster_id 
    where
        m1_0.genre_id=?
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Collection fully initialized: [com.movieland.entity.Genre.movies#8]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Initializer list:
	  com.movieland.entity.Genre.movies.{element}.poster -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element}.poster)@574825330 (ToOneAttributeMapping(NavigableRole[com.movieland.entity.Movie.poster])@1580124114)
	  com.movieland.entity.Genre.movies.{element} -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element})@912687536 (EntityCollectionPart(com.movieland.entity.Genre.movies#{element})@2109419055)
	  com.movieland.entity.Genre.movies -> BagInitializer(com.movieland.entity.Genre.movies)@217565889 (PluralAttribute(com.movieland.entity.Genre.movies))
	  com.movieland.entity.Genre.movies.{element}.genres -> DelayedCollectionInitializer(com.movieland.entity.Genre.movies.{element}.genres)@1450615426 (PluralAttribute(com.movieland.entity.Movie.genres))

2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.name_native,
        m1_1.name_russian,
        p1_0.id,
        p1_0.movie_name,
        p1_0.picture_path,
        m1_1.price,
        m1_1.rating,
        m1_1.year_of_release 
    from
        movies_genre_map m1_0 
    join
        movies m1_1 
            on m1_1.id=m1_0.movie_id 
    left join
        posters p1_0 
            on p1_0.id=m1_1.poster_id 
    where
        m1_0.genre_id=?
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Collection fully initialized: [com.movieland.entity.Genre.movies#9]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Initializer list:
	  com.movieland.entity.Genre.movies.{element}.poster -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element}.poster)@1567574626 (ToOneAttributeMapping(NavigableRole[com.movieland.entity.Movie.poster])@1580124114)
	  com.movieland.entity.Genre.movies.{element} -> EntityJoinedFetchInitializer(com.movieland.entity.Genre.movies.{element})@1047433727 (EntityCollectionPart(com.movieland.entity.Genre.movies#{element})@2109419055)
	  com.movieland.entity.Genre.movies -> BagInitializer(com.movieland.entity.Genre.movies)@2040571012 (PluralAttribute(com.movieland.entity.Genre.movies))
	  com.movieland.entity.Genre.movies.{element}.genres -> DelayedCollectionInitializer(com.movieland.entity.Genre.movies.{element}.genres)@2004232058 (PluralAttribute(com.movieland.entity.Movie.genres))

2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : 
    select
        m1_0.genre_id,
        m1_1.id,
        m1_1.name_native,
        m1_1.name_russian,
        p1_0.id,
        p1_0.movie_name,
        p1_0.picture_path,
        m1_1.price,
        m1_1.rating,
        m1_1.year_of_release 
    from
        movies_genre_map m1_0 
    join
        movies m1_1 
            on m1_1.id=m1_0.movie_id 
    left join
        posters p1_0 
            on p1_0.id=m1_1.poster_id 
    where
        m1_0.genre_id=?
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [4] - [1]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (EntityJoinedFetchInitializer) Hydrated EntityKey (com.movieland.entity.Genre.movies.{element}.poster): 1
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [1] - [1]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (EntityJoinedFetchInitializer) Hydrated EntityKey (com.movieland.entity.Genre.movies.{element}): 1
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [1] - [1]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (DelayedCollectionInitializer) Current row collection key : com.movieland.entity.Genre.movies.{element}.genres#1
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [0] - [10]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (BagInitializer) Current row collection key : com.movieland.entity.Genre.movies#10
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [0] - [10]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (EntityJoinedFetchInitializer) Created new entity instance [com.movieland.entity.Genre.movies.{element}.poster#1] : 1723784815
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (EntityJoinedFetchInitializer) Created new entity instance [com.movieland.entity.Genre.movies.{element}#1] : 548759605
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (BagInitializer) Responsible for loading collection [com.movieland.entity.Genre.movies#10] : org.hibernate.collection.spi.PersistentBag@1774404713
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [5] - [Побег из Шоушенка]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [6] - [https://images-na.ssl-images-amazon.com/images/M/MV5BODU4MjU4NjIwNl5BMl5BanBnXkFtZTgwMDU2MjEyMDE@._V1._SY209_CR0,0,140,209_.jpg]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (EntityJoinedFetchInitializer) Done materializing entityInstance : com.movieland.entity.Genre.movies.{element}.poster#1
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [2] - [The Shawshank Redemption]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [3] - [Побег из Шоушенка]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [7] - [123.45]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [8] - [8.9]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [9] - [1994]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (EntityJoinedFetchInitializer) Done materializing entityInstance : com.movieland.entity.Genre.movies.{element}#1
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (BagInitializer) Reading element from row for collection [com.movieland.entity.Genre.movies#10] -> org.hibernate.collection.spi.PersistentBag@1774404713
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6dcb6285
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Collection fully initialized: [com.movieland.entity.Genre.movies#10]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Initializer list:
	  com.movieland.entity.Movie.genres.{element} -> EntityJoinedFetchInitializer(com.movieland.entity.Movie.genres.{element})@1686383229 (EntityCollectionPart(com.movieland.entity.Movie.genres#{element})@1172863542)
	  com.movieland.entity.Movie.genres -> BagInitializer(com.movieland.entity.Movie.genres)@1741805724 (PluralAttribute(com.movieland.entity.Movie.genres))
	  com.movieland.entity.Movie.genres.{element}.movies -> DelayedCollectionInitializer(com.movieland.entity.Movie.genres.{element}.movies)@1371029929 (PluralAttribute(com.movieland.entity.Genre.movies))

2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : 
    select
        g1_0.movie_id,
        g1_1.id,
        g1_1.name 
    from
        movies_genre_map g1_0 
    join
        genres g1_1 
            on g1_1.id=g1_0.genre_id 
    where
        g1_0.movie_id=?
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [1] - [10]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (EntityJoinedFetchInitializer) Hydrated EntityKey (com.movieland.entity.Movie.genres.{element}): 10
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [1] - [10]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (DelayedCollectionInitializer) Current row collection key : com.movieland.entity.Movie.genres.{element}.movies#10
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [0] - [1]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (BagInitializer) Current row collection key : com.movieland.entity.Movie.genres#1
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [0] - [1]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (BagInitializer) Responsible for loading collection [com.movieland.entity.Movie.genres#1] : org.hibernate.collection.spi.PersistentBag@446677936
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (BagInitializer) Reading element from row for collection [com.movieland.entity.Movie.genres#1] -> org.hibernate.collection.spi.PersistentBag@446677936
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@7b6980ae
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [1] - [15]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (EntityJoinedFetchInitializer) Hydrated EntityKey (com.movieland.entity.Movie.genres.{element}): 15
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [1] - [15]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (DelayedCollectionInitializer) Current row collection key : com.movieland.entity.Movie.genres.{element}.movies#15
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [0] - [1]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (BagInitializer) Current row collection key : com.movieland.entity.Movie.genres#1
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Extracted JDBC value [0] - [1]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (BagInitializer) Found existing loading collection entry [com.movieland.entity.Movie.genres#1]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@446677936
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (BagInitializer) Responsible for loading collection [com.movieland.entity.Movie.genres#1] : org.hibernate.collection.spi.PersistentBag@446677936
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : (BagInitializer) Reading element from row for collection [com.movieland.entity.Movie.genres#1] -> org.hibernate.collection.spi.PersistentBag@446677936
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@7b6980ae
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Collection fully initialized: [com.movieland.entity.Movie.genres#1]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Writing [java.lang.StackOverflowError]
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2024-03-29 13:13:11 [http-nio-8080-exec-1] DEBUG : Failed to complete request: org.apache.catalina.connector.ClientAbortException: java.nio.channels.ClosedChannelException
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : Bean 'webServerStartStop' completed its stop procedure
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : Stopping beans in phase -2147483647
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : Bean 'springBootLoggingLifecycle' completed its stop procedure
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : Shutting down ExecutorService 'applicationTaskExecutor'
2024-03-29 13:13:11 [SpringApplicationShutdownHook] INFO  : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : HHH000031: Closing
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@746fa83b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1bfb60b7]
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-03-29 13:13:11 [SpringApplicationShutdownHook] INFO  : HikariPool-1 - Shutdown initiated...
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2024-03-29 13:13:11 [HikariPool-1 connection closer] DEBUG : HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@3f6cce7f: (connection evicted)
2024-03-29 13:13:11 [HikariPool-1 connection closer] DEBUG : HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@38286084: (connection evicted)
2024-03-29 13:13:11 [HikariPool-1 connection closer] DEBUG : HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@79156abf: (connection evicted)
2024-03-29 13:13:11 [HikariPool-1 connection closer] DEBUG : HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@48a6f1ce: (connection evicted)
2024-03-29 13:13:11 [HikariPool-1 connection closer] DEBUG : HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@193a95f0: (connection evicted)
2024-03-29 13:13:11 [HikariPool-1 connection closer] DEBUG : HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5978ba92: (connection evicted)
2024-03-29 13:13:11 [HikariPool-1 connection closer] DEBUG : HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@1d74e86b: (connection evicted)
2024-03-29 13:13:11 [HikariPool-1 connection closer] DEBUG : HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@5f8d25c5: (connection evicted)
2024-03-29 13:13:11 [HikariPool-1 connection closer] DEBUG : HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@568ba6ce: (connection evicted)
2024-03-29 13:13:11 [HikariPool-1 connection closer] DEBUG : HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@4e55832e: (connection evicted)
2024-03-29 13:13:11 [SpringApplicationShutdownHook] DEBUG : HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2024-03-29 13:13:11 [SpringApplicationShutdownHook] INFO  : HikariPool-1 - Shutdown completed.
